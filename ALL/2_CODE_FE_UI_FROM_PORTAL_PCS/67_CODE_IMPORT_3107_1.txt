import {
  Button,
  DataTable,
  DropZone,
  FormLayout,
  IndexTable,
  Layout,
  LegacyCard,
  LegacyStack,
  Link,
  Page,
  PolarisIcons,
  Text,
} from 'pcs-polaris';
import React, { useState } from 'react';
import TitleBreadcrumbs from '../../components/Breadcrumb/TitleBreadcrumb';
import { useLocation, useNavigate } from 'react-router-dom';
import { IconBack } from '../Ecommerce/IconEcommerce';
import * as XLSX from 'xlsx';
import { trim } from 'lodash';
import { showToast } from '../../helpers/toast';

const ImportCreateShippingOrders = () => {
  const { state } = useLocation();
  const [step, setStep] = useState(1);
  const [fileName, setFileName] = useState('');
  const [data, setData] = useState<any>([]);
  const [trackingCount, setTrackingCount] = useState(0);

  const readFile = (file: File) => {
    const reader = new FileReader();
    reader.onload = (e: any) => {
      setFileName(file.name);
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, { type: 'array' });
      const firstSheetName = workbook.SheetNames[0];
      const worksheet = workbook.Sheets[firstSheetName];
      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
      console.log('dữ liệu jsson', jsonData);
      let items = [];
      let trackingCodes = new Set();
      let trackings = [];
      for (let i = 4; i < jsonData.length; i++) {
        let row: any = jsonData[i];
        if (row.length) {
          let payload = {
            trackingCode: trim(row[1]),
            content: trim(row[2]),
            contents: [trim(row[2])],
            quantity: trim(row[3]),
            price: trim(row[4]),
            inspection: trim(row[5]) === 'x',
            weight: trim(row[6]),
            note: trim(row[7]),
          };
          payload = Object.assign(payload, {});
          items.push(payload);
          trackingCodes.add(trim(row[1]));
        } else {
          break;
        }
      }
      // items.forEach((item) => {
      //   console.log('dữ liệu content', item.content);
      // });
      setData(items);
      setTrackingCount(trackingCodes.size - 1);
    };
    reader.readAsArrayBuffer(file);
  };
  const rows2 = data.map((item: any, i: number) => {
    const serviceContent = item.inspection ? 'x' : <span style={{ color: '#A91116' }}>Không có dịch vụ được chọn</span>;
    const noteContent = item.note ? (
      item.note
    ) : (
      <span style={{ color: '#A91116' }}>Không có ghi chú nào được thêm</span>
    );
    return [i + 1, item.trackingCode, item.weight, serviceContent, noteContent];
  });
  return (
    <div className='Polaris-Custom'>
      <Page
        //@ts-ignore
        title={<TitleBreadcrumbs breadcrumbs={[{ title: 'Import nhiều đơn hàng vận chuyển', url: '' }]} />}
        primaryAction={
          step == 1 ? (
            <Link url='/don-hang-van-chuyen/tao-moi'>
              <div className='Icon_Import'>
                <div>
                  <IconBack />
                </div>
                <div className='Create_Order_Font'>Quay lại</div>
              </div>
            </Link>
          ) : null || step == 2 ? (
            <div className='Icon_Import' onClick={() => setStep(1)}>
              <div>
                <IconBack />
              </div>
              <div className='Create_Order_Font'>Quay lại</div>
            </div>
          ) : null || step == 3 ? (
            <div className='Icon_Import' onClick={() => setStep(2)}>
            <div>
              <IconBack />
            </div>
            <div className='Create_Order_Font'>Quay lại</div>
          </div>
          ):null
        }
      >
        {step == 1 ? (
          <Layout>
            <Layout.Section>
              <LegacyCard title={'Kiểm tra thông tin'}>
                <LegacyCard.Section>
                  <FormLayout>
                    <FormLayout.Group>
                      <table className='Info_Table_Shipping_Orders'>
                        <thead>
                          <tr>
                            <th colSpan={2}>Thông tin vận chuyển</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td style={{ width: '30%' }}>Tuyến vận chuyển</td>
                            <td style={{ width: '70%' }}>{state?.routeImport}</td>
                          </tr>
                          <tr>
                            <td>Kho nhận hàng</td>
                            <td>{state?.warehouseImport}</td>
                          </tr>
                        </tbody>
                      </table>

                      <table className='Info_Table_Shipping_Orders'>
                        <thead>
                          <tr>
                            <th colSpan={2}>Thông tin giao hàng</th>
                          </tr>
                        </thead>
                        <tbody>
                          {state?.recipient && (
                            <>
                              <tr>
                                <td style={{ width: '30%' }}>Người nhận</td>
                                <td style={{ width: '70%' }}>
                                  {state.recipient.name} - {state.recipient.phone}
                                </td>
                              </tr>
                              <tr>
                                <td>Địa chỉ</td>
                                <td>{state.recipient.address}</td>
                              </tr>
                            </>
                          )}
                        </tbody>
                      </table>
                    </FormLayout.Group>
                  </FormLayout>
                </LegacyCard.Section>
              </LegacyCard>
            </Layout.Section>

            <Layout.Section>
              <LegacyCard>
                <LegacyCard.Section
                  title={'Import file'}
                  actions={[
                    {
                      content: 'Tải mẫu file import',
                      icon: PolarisIcons.ImportMinor,
                      url: '/files/TRANS_IMPORT_TEMPLATE.xlsx',
                      external: true,
                    },
                  ]}
                >
                  <FormLayout>
                    <div className={'DropZone-Custom'}>
                      <DropZone
                        type={'file'}
                        accept={'.xlsx'}
                        onDrop={(files) => {
                          readFile(files[0]);
                        }}
                      >
                        <DropZone.FileUpload actionHint={'Vui lòng chọn file .xlsx'} />
                      </DropZone>
                    </div>
                    {fileName ? (
                      <LegacyStack>
                        <LegacyStack.Item>
                          <Text as={'p'}>{fileName}</Text>
                        </LegacyStack.Item>
                        <LegacyStack>
                          <Button
                            onClick={() => {
                              setFileName('');
                              setData([]);
                            }}
                            plain
                            destructive
                            icon={PolarisIcons.DeleteMinor}
                          />
                        </LegacyStack>
                      </LegacyStack>
                    ) : null}
                  </FormLayout>
                </LegacyCard.Section>
                {data.length ? (
                  <LegacyCard.Section title={'Dữ liệu import'}>
                    <div className={'IndexTable--NoSticky'}>
                      <IndexTable
                        selectable={false}
                        headings={[
                          { title: 'Mã tracking' },
                          { title: 'Nội dung hàng' },
                          { title: 'Số lượng' },
                          { title: 'Đơn giá sản phẩm' },
                          { title: 'Kiểm hàng & Chụp ảnh' },
                          { title: 'Trọng lượng dự kiến (kg)' },
                          { title: 'Ghi chú' },
                        ]}
                        itemCount={data.length}
                      >
                        {data.map((item: any, index: number) => (
                          <IndexTable.Row id={`${index}`} key={index} position={index}>
                            <IndexTable.Cell>{item.trackingCode}</IndexTable.Cell>
                            <IndexTable.Cell>{item.content}</IndexTable.Cell>
                            <IndexTable.Cell>{item.quantity}</IndexTable.Cell>
                            <IndexTable.Cell>{item.price}</IndexTable.Cell>
                            <IndexTable.Cell>{item.inspection ? 'x' : ''}</IndexTable.Cell>
                            <IndexTable.Cell>{item.weight}</IndexTable.Cell>
                            <IndexTable.Cell>{item.note}</IndexTable.Cell>
                          </IndexTable.Row>
                        ))}
                      </IndexTable>
                    </div>
                  </LegacyCard.Section>
                ) : null}

                <div style={{ position: 'absolute' }}>
                  <div className='Create_Input_Tracking_Code'>
                    <div style={{ color: '#85C0FF', whiteSpace: 'nowrap' }}>{trackingCount} Tracking</div>
                    <div style={{ display: 'flex', gap: '20px', alignItems: 'center' }}>
                      <div style={{ color: '#FFFFFF', cursor: 'pointer' }}>
                        <Link url='/don-hang-van-chuyen' removeUnderline monochrome>
                          Hủy
                        </Link>
                      </div>
                      <div
                        className='Active_Button'
                        onClick={() => {
                          if (data && data.length > 0) {
                            setStep(2);
                          } else {
                            showToast('Hãy nhập dữ liệu từ file.xlsx của bạn', 'error');
                          }
                        }}
                      >
                        <Button>Tiếp tục</Button>
                      </div>
                    </div>
                  </div>
                </div>
              </LegacyCard>
            </Layout.Section>
          </Layout>
        ) : null}

        {step == 2 ? (
          <Layout>
            <Layout.Section>
              <LegacyCard>
                <LegacyCard.Section>
                  <FormLayout>
                    <FormLayout.Group>
                      <table className='Info_Table_Shipping_Orders'>
                        <thead>
                          <tr>
                            <th colSpan={2}>Thông tin vận chuyển</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td style={{ width: '30%' }}>Tuyến vận chuyển</td>
                            <td style={{ width: '70%' }}>{state?.routeImport}</td>
                          </tr>
                          <tr>
                            <td>Kho nhận hàng</td>
                            <td>{state?.warehouseImport}</td>
                          </tr>
                        </tbody>
                      </table>

                      <table className='Info_Table_Shipping_Orders'>
                        <thead>
                          <tr>
                            <th colSpan={2}>Thông tin giao hàng</th>
                          </tr>
                        </thead>
                        <tbody>
                          {state?.recipient && (
                            <>
                              <tr>
                                <td style={{ width: '30%' }}>Người nhận</td>
                                <td style={{ width: '70%' }}>
                                  {state.recipient.name} - {state.recipient.phone}
                                </td>
                              </tr>
                              <tr>
                                <td>Địa chỉ</td>
                                <td>{state.recipient.address}</td>
                              </tr>
                            </>
                          )}
                        </tbody>
                      </table>
                    </FormLayout.Group>
                  </FormLayout>
                </LegacyCard.Section>
              </LegacyCard>
            </Layout.Section>

            <Layout.Section>
              <LegacyCard>
                <LegacyCard.Section>
                  <div className='Data_Table_Verify_Request'>
                    <DataTable
                      columnContentTypes={['text', 'text', 'text', 'text', 'text']}
                      headings={['Danh sách tracking', '', '', '', '']}
                      rows={rows2}
                    />
                  </div>
                </LegacyCard.Section>
                <div style={{ position: 'absolute' }}>
                  <div className='Create_Input_Tracking_Code'>
                    <div style={{ color: '#85C0FF', whiteSpace: 'nowrap' }}>{trackingCount} Tracking</div>
                    <div style={{ display: 'flex', gap: '20px', alignItems: 'center' }}>
                      <div style={{ color: '#FFFFFF', cursor: 'pointer' }}>
                        <Link url='/don-hang-van-chuyen' removeUnderline monochrome>
                          Hủy
                        </Link>
                      </div>
                      <div
                        className='Active_Button'
                        onClick={() => {
                          if (data && data.length > 0) {
                            setStep(3);
                          } else {
                            showToast('Hãy nhập dữ liệu từ file.xlsx của bạn', 'error');
                          }
                        }}
                      >
                        <Button>Gửi yêu cầu</Button>
                      </div>
                    </div>
                  </div>
                </div>
              </LegacyCard>
            </Layout.Section>
          </Layout>
        ) : null}

        {step == 3 ? (
          <Layout>
            <Layout.Section>
              <LegacyCard>
                <LegacyCard.Section>

                </LegacyCard.Section>
              </LegacyCard>
            </Layout.Section>
          </Layout>
        ): null}
      </Page>
    </div>
  );
};

export default ImportCreateShippingOrders;
