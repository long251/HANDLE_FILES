TUYẾN
-----
LOGIC:
const regionOptions = [
  {
    label: 'Tất cả',
    value: '',
  },
  ];
------------------------
  const [route, setRoute] = useState('');
  const [searchRoute, setSearchRoute] = useState('Tất cả');
API:
  const debounceFetchDataFun = useCallback(
    debounce((data: any) => {
      dispatch(ecommerceOrderAction.fetchOrders(data));
      dispatch(ecommerceOrderAction.fetchTotal(data));
    }, 300),
    [],
  );
useEffect(() => {
    debounceFetchDataFun({
      status: getStatusByType(activeTab),
      orderCode: orderCode,
      trackingCode: trackingCode,
      routeCode: route,
      fromDate: moment(takeDate('start'), 'DD/MM/yyyy').toDate(),
      toDate: moment(takeDate('end'), 'DD/MM/yyyy').add(1, 'd').toDate(),
      pageIndex: page,
      pageSize: limit,
    });
  }, [page, orderCode, trackingCode, route, activeTab, dateInputValue]);
____________________________________________________________
RETURN:
<Autocomplete
                      options={regionOptions}
                      selected={[route]}
                      onSelect={(selected) => {
                        setRoute(selected[0]);
                        goToPage(1);
                        const selectedText = selected.map((selectedItem) => {
                          const matchedOption = regionOptions.find((option) => {
                            return option['value'] == selectedItem;
                          });
                          if (matchedOption) {
                            return `${matchedOption['label']}`;
                          }
                          return '';
                        });
                        setSearchRoute(selectedText[0]);
                      }}
                      textField={
                        <Autocomplete.TextField
                          value={searchRoute}
                          onChange={(value) => {
                            setSearchRoute(value);
                          }}
                          suffix={<Icon source={PolarisIcons.CaretDownMinor} />}
                          autoComplete={'off'}
                          label={'Tuyến'}
                        />
                      }
                    />