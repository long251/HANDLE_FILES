const dispatch = useDispatch();
  const [openActionId, setOpenActionId] = useState<number | null>(null);
  const [openModalCancelId, setOpenModalCancelId] = useState<number | null>(null);
  const [loadingCancel, setLoadingCancel] = useState(false);
  const [messageCancel, setMessageCancel] = useState('');
  const handleCancel = () => {
    setLoadingCancel(true);
    setLoadingCancel(false);
    setOpenModalCancelId(null);
  };
  const rowMarkup = paginatedRows.map(
    ({ id, img, codeOrders, product, region, source, number, totalMoney, orderDate, status, action }, index) => (
      <IndexTable.Row id={`${id}`} key={id} selected={selectedResources.includes(`${id}`)} position={index}>
        <IndexTable.Cell>
          <img src={img} alt='ImgEcommerce' className='Ecommerce_Image' />
        </IndexTable.Cell>
        <IndexTable.Cell>{codeOrders}</IndexTable.Cell>
        <IndexTable.Cell>
          {product.map((p, index) => (
            <div key={index} className='Ecommerce_Product'>
              <div>{truncateProductName(p.name)}</div>
              <div style={{ display: 'flex', flexDirection: 'column' }}>
                <div>Size: {p.size}</div>
                <div>Color: {p.color}</div>
                <div>Barcode: {p.barcode}</div>
              </div>
            </div>
          ))}
        </IndexTable.Cell>
        <IndexTable.Cell>{region}</IndexTable.Cell>
        <IndexTable.Cell>{source}</IndexTable.Cell>
        <IndexTable.Cell>{number}</IndexTable.Cell>
        <IndexTable.Cell>
          <div className='Ecommerce_Total_Money'>
            <div>
              <input type='text' defaultValue={totalMoney} placeholder='Tổng tiền' className='Input_Total_Money' />
            </div>
            <div className='Unit_Total_Money'>đ</div>
          </div>
        </IndexTable.Cell>
        <IndexTable.Cell>{orderDate}</IndexTable.Cell>
        <IndexTable.Cell>
          <div
            className={
              status === 'Chờ xử lý' ? 'IndexTable_Waiting' : status === 'Đã xử lý' ? 'IndexTable_Processed' : ''
            }
          >
            {status}
          </div>
        </IndexTable.Cell>
        <IndexTable.Cell>
          <div className='Style_Action'>
            <Link url={`/don-hang-ecommerce/${id}`} removeUnderline monochrome>
              <div className='Button_Action_View'>
                <div className='Style_Button_Action_View'>
                  <IconEye />
                </div>
                <div className='Style_Button_Action_View'>{action}</div>
              </div>
            </Link>
            <div className='Style_Popover'>
              <Popover
                active={openActionId === id}
                preferredAlignment={'right'}
                activator={
                  <Button
                    icon={PolarisIcons.CaretDownMinor}
                    onClick={() => setOpenActionId(openActionId === id ? null : id)}
                  />
                }
                onClose={() => {
                  setOpenActionId(null);
                }}
              >
                        <Button
                          onClick={() => setOpenModalCancelId(id)}
                          textAlign={'left'}
                          fullWidth
                          icon={PolarisIcons.CircleCancelMajor}
                        >
                          Gửi yêu cầu hủy đơn
                        </Button>
              </Popover>
              <Modal
                open={openModalCancelId === id}
                primaryAction={{
                  content: 'Yêu cầu huỷ đơn',
                  onAction: () => handleCancel(),
                  loading: loadingCancel,
                }}
                title={'Yêu cầu huỷ đơn'}
                onClose={() => setOpenModalCancelId(null)}
              >
                <Modal.Section>
                  <TextField
                    multiline={3}
                    label={'Ghi chú xử lý'}
                    placeholder={'Nhập ghi chú xử lý'}
                    autoComplete={'off'}
                    value={messageCancel}
                    onChange={(value) => setMessageCancel(value)}
                  />
                </Modal.Section>
              </Modal>
            </div>
          </div>
        </IndexTable.Cell>
      </IndexTable.Row>
    ),
  );