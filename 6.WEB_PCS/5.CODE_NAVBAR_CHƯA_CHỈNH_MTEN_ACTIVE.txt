import React, { useEffect, useState } from "react";
import Link from "~/components/Link";
import { useLocation, useMatches, useParams } from "react-router";
import { __t, getTranslation } from "~/utils/translate";

const solutions = [
  {
    title: "navbar.solutions.international_service",
    url: "/solution/international-service",
    // url: "",
    // url: "/solution/priority-international-express",
    services: [
      {
        title: "navbar.solutions.priority_international_express",
        url: "/solution/priority-international-express",
      },
      {
        title: "navbar.solutions.international_express",
        url: "/solution/international-express",
      },
      {
        title: "navbar.solutions.air_freight",
        url: "/solution/air-freight",
      },
      {
        title: "navbar.solutions.sea_freight",
        url: "/solution/sea-freight",
      },
    ],
    image: "/images/example/img_nav_bar.png",
    summary: "navbar.summary.international_service",
  },
  {
    title: "navbar.solutions.domestic_express",
    url: "/solution/domestic-express",
    // url: "",
    services: [
      {
        title: "navbar.solutions.express_services",
        url: "/solution/express-services",
      },
      {
        title: "navbar.solutions.trucking_service",
        url: "/solution/trucking-service",
      },
      {
        title: "navbar.solutions.fastest_delivery",
        url: "/solution/fastest-delivery",
      },
      {
        title: "navbar.solutions.industrial_park_route",
        url: "/solution/industrial-park-route",
      },
      {
        title: "navbar.solutions.specialized_distribution_services",
        url: "/solution/specialized-distribution-services",
      },
    ],
    image: "/images/example/img_nav_bar_3.jpg",
    summary: "navbar.summary.domestic_express",
  },
  {
    title: "navbar.solutions.ecommerce_solutions",
    url: "/solution/ecommerce-solutions",
    // url: "",
    services: [
      // {
      //   title: "navbar.solutions.order_services",
      //   url: "/solution/order-services",
      // },
      // {
      //   title: "navbar.solutions.shipping_cargo",
      //   url: "/solution/shipping-cargo",
      // },
      {
        title: "navbar.solutions.epacket",
        url: "/solution/epacket",
      },
      {
        title: "navbar.solutions.other_services",
        url: "/solution/other-services",
      },
    ],
    image: "/images/example/img_nav_bar_2.jpg",
    summary: "navbar.summary.ecommerce_solutions",
  },
  {
    title: "navbar.solutions.global_fulfillment",
    url: "/solution/fulfillment-solutions",
    // url: "",
    services: [
      {
        title: "navbar.solutions.global_warehousing",
        url: "/solution/global-fulfillment",
      },
      {
        title: "navbar.solutions.value_added_services",
        url: "/solution/value-added-services",
      },
    ],
    image: "/images/example/img_nav_bar_4.jpg",
    summary: "navbar.summary.global_fulfillment",
  },
];

const keywords = [
  {
    label: "priority international express",
    url: "/solution/priority-international-express",
  },
  {
    label: "express services",
    url: "/solution/express-services",
  },
  {
    label: "epacket",
    url: "/solution/epacket",
  },
  {
    label: "shipping cargo",
    url: "/solution/shipping-cargo",
  },
  {
    label: "Fulfillment",
    url: "/solution/global-fulfillment",
  },
];

const Navbar = () => {
  const [isSticky, setIsSticky] = useState(false);
  const handleScroll = () => {
    if (window.scrollY > 48) {
      setIsSticky(true); // Navbar is sticky
    } else {
      setIsSticky(false); // Navbar is not sticky
    }
  };

  useEffect(() => {
    setIsSticky(window.scrollY > 48);
    // Add scroll event listener on mount
    window.addEventListener("scroll", handleScroll);

    // Clean up event listener on unmount
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const [activeDesktopMenu, setActiveDesktopMenu] = useState(
    solutions[0].title
  );
  const [activeDesktopSearch, setActiveDesktopSearch] = useState(false);

  const [activeMobileSearch, setActiveMobileSearch] = useState(false);
  const [activeMobileMenu, setActiveMobileMenu] = useState(false);

  // business solution menu
  const [activeMobileBusinessSolution, setActiveMobileBusinessSolution] =
    useState(false);
  const [activeMobileService, setActiveMobileService] = useState("");

  const setBodyScroll = (scrollable: boolean) => {
    let body = document.body;
    console.log(body);
    body.style.overflow = scrollable ? "auto" : "hidden";
  };

  const matches = useMatches();
  const translations = getTranslation(matches);
  let params = useParams();
  const location = useLocation();
  console.log(location);

  const handleSearch = (value: string) => {
    const url = `/${params.lang}/search?keyword=${encodeURI(value)}`;
    window.location.href = url;
  };

  const [desktopSuggest, setDesktopSuggest] = useState(false);
  const handleNavigate = (path: string) => {
    // const url = `${location.origin}/${params.lang}${path}`
    const url = `/${params.lang}${path}`;
    window.location.href = url;
  };

  const [mobileSuggest, setMobileSuggest] = useState(false);

  return (
    <>
      <div
        className={`navbar sticky ${
          activeMobileSearch || activeMobileMenu
            ? `bg-white ${isSticky ? "!top-[0px] pt-[8px]" : ""}`
            : ""
        } top-[8px] z-10 ${
          isSticky ? "bg-transparent" : "bg-white"
        } px-paddingMobile md:px-paddingDesktop`}
      >
        <div
          className={`hidden ${
            isSticky ? "navbar__sticky shadow-lg" : ""
          } w-full md:flex items-center rounded-[40px] px-[12px] py-[8px] gap-[20px] md:gap-[0px] lg:gap-[20px]`}
        >
          <div className="">
            <a href={`/${params.lang}`} className={""} title={"PCS"}>
              <svg
                width="87"
                height="56"
                viewBox="0 0 87 56"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_443_127)">
                  <path
                    d="M38.2107 23.8326C38.4735 23.5691 38.6217 23.2109 38.6217 22.8378V22.3548C38.6217 21.9817 38.4735 21.6235 38.2107 21.36C37.9479 21.0964 37.5902 20.9479 37.2182 20.9479H28.756V24.2458H37.2182C37.5902 24.2458 37.9474 24.0972 38.2107 23.8337V23.8326ZM23.8231 37.4369V16.0005H39.4205C39.9768 16.0005 40.5254 16.1303 41.0231 16.3796L41.3907 16.5639C41.7352 16.7367 42.0496 16.9639 42.3217 17.2368C42.5944 17.5097 42.821 17.825 42.9927 18.1705L43.1765 18.5391C43.4256 19.0376 43.5545 19.5883 43.5545 20.1457V25.0458C43.5545 25.6031 43.4256 26.1533 43.1765 26.6524L42.9927 27.0216C42.8204 27.3671 42.5938 27.6829 42.3217 27.9553C42.0496 28.2282 41.7352 28.4559 41.3907 28.6281L41.0225 28.8125C40.5254 29.0623 39.9763 29.1916 39.4205 29.1916H28.756V37.4358H23.8231V37.4369Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M47.7313 37.0577L47.3637 36.8734C47.0192 36.7006 46.7043 36.4729 46.4321 36.2C46.1606 35.9271 45.934 35.6118 45.7617 35.2668L45.5779 34.8982C45.3288 34.3991 45.1993 33.8489 45.1993 33.291V20.1467C45.1993 19.5888 45.3288 19.0386 45.5779 18.5396L45.7617 18.171C45.9334 17.826 46.1606 17.5102 46.4321 17.2378C46.7043 16.9649 47.0192 16.7371 47.3637 16.5644L47.7313 16.3801C48.2284 16.1303 48.7776 16.001 49.3334 16.001H60.7962C61.3525 16.001 61.9011 16.1308 62.3987 16.3801L62.7663 16.5644C63.1109 16.7371 63.4253 16.9644 63.6974 17.2373C63.9701 17.5102 64.1966 17.8254 64.3684 18.171L64.5522 18.5396C64.8012 19.0381 64.9302 19.5888 64.9302 20.1462V22.5962H59.9973V21.7715L59.1755 20.9467H50.9535L50.1311 21.7715V31.6657L50.9535 32.4905H59.1755L59.9973 31.6657V30.841H64.9302V33.291C64.9302 33.8484 64.8007 34.3991 64.5522 34.8976L64.3684 35.2663C64.1966 35.6118 63.9695 35.9271 63.6974 36.2C63.4253 36.4729 63.1109 36.7006 62.7663 36.8728L62.3987 37.0572C61.9011 37.307 61.3525 37.4363 60.7962 37.4363H49.3334C48.7776 37.4363 48.2284 37.3064 47.7313 37.0572V37.0577Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M69.1075 37.0577L68.7394 36.8728C68.3949 36.7001 68.0805 36.4729 67.8084 36.2C67.5368 35.9271 67.3102 35.6118 67.1379 35.2668L66.9536 34.8976C66.7045 34.3991 66.5756 33.8489 66.5756 33.291V30.841H71.5084V31.6657L72.3308 32.4905H80.5528L81.3747 31.6657V30.0168L80.5528 29.1926H70.7101C70.1544 29.1926 69.6052 29.0627 69.1081 28.8135L68.74 28.6292C68.3954 28.4564 68.0805 28.2286 67.8089 27.9557C67.5362 27.6828 67.3107 27.3676 67.1379 27.0226L66.9536 26.6534C66.7045 26.1549 66.5756 25.6042 66.5756 25.0468V20.1467C66.5756 19.5894 66.705 19.0386 66.9536 18.5402L67.1379 18.171C67.3096 17.826 67.5368 17.5113 67.8084 17.2384C68.0805 16.9655 68.3949 16.7377 68.7394 16.5649L69.1075 16.3801C69.6046 16.1303 70.1533 16.001 70.709 16.001H82.1724C82.7282 16.001 83.2768 16.1308 83.7744 16.3801L84.1426 16.5649C84.4866 16.7377 84.8015 16.9649 85.0731 17.2378C85.3452 17.5107 85.5718 17.8265 85.744 18.1715L85.9278 18.5407C86.1769 19.0392 86.3059 19.5894 86.3059 20.1467V22.5968H81.373V21.772L80.5511 20.9473H72.3292L71.5068 21.772V23.421L72.3292 24.2457H82.1718C82.7276 24.2457 83.2763 24.375 83.7728 24.6248L84.1409 24.8091C84.4855 24.9819 84.7998 25.2091 85.072 25.482C85.3446 25.7549 85.5712 26.0702 85.7429 26.4157L85.9273 26.7849C86.1758 27.2834 86.3053 27.8336 86.3053 28.391V33.2916C86.3053 33.8489 86.1753 34.3991 85.9273 34.8976L85.7435 35.2668C85.5712 35.6118 85.3446 35.9276 85.0725 36.2C84.8004 36.4729 84.486 36.7006 84.142 36.8728L83.7739 37.0577C83.2768 37.3075 82.7282 37.4368 82.1718 37.4368H70.7085C70.1527 37.4368 69.6041 37.307 69.107 37.0577H69.1075Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M20.1836 0.735607C27.3439 -0.988722 34.5229 0.401635 40.3067 4.03516C35.8358 2.25581 30.7933 1.79254 25.7611 3.00464C12.7758 6.13253 4.77716 19.2246 7.89565 32.2467C11.0141 45.2694 24.0691 53.2908 37.0549 50.1635C37.6304 50.0254 38.195 49.8664 38.7497 49.6892C36.8124 50.7263 34.7138 51.5368 32.4787 52.0754C18.3413 55.4795 4.12922 46.7473 0.734214 32.5702C-2.66079 18.3932 6.04672 4.1408 20.1836 0.735607Z"
                    fill="#008ACC"
                  />
                  <path
                    d="M22.2008 6.67386C20.2729 7.52282 18.9605 8.17261 15.3016 10.8801C18.3444 7.00123 21.487 5.58611 24.6533 4.456C29.2492 2.81585 42.6817 1.76552 49.0223 12.3673C49.2544 12.7547 49.3822 13.1921 49.5369 13.6097C44.3331 4.1809 29.7946 3.33084 22.1997 6.67386H22.2003H22.2008Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M44.7215 47.6435C47.8132 45.1203 50.2091 42.059 51.8885 38.7039C50.4225 43.046 47.7528 47.0311 43.9535 50.1486C32.2992 59.7094 16.3776 57.2462 5.57809 45.0092C5.14576 44.5195 4.84346 44.0689 4.50439 43.5858C17.1385 56.6327 33.504 56.8016 44.7215 47.6446V47.6435Z"
                    fill="#ED543E"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_443_127">
                    <rect width="86.3059" height="56" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
          {activeDesktopSearch ? (
            <>
              <div className="flex-1">
                <div
                  className={
                    "bg-white border-[1px] border-[#B7B7B7] rounded-[48px] px-[8px] h-[48px] flex items-center gap-[8px]"
                  }
                >
                  <svg
                    width="25"
                    height="24"
                    viewBox="0 0 25 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M11.3059 19C15.7242 19 19.3059 15.4183 19.3059 11C19.3059 6.58172 15.7242 3 11.3059 3C6.88763 3 3.30591 6.58172 3.30591 11C3.30591 15.4183 6.88763 19 11.3059 19Z"
                      stroke="#ED543E"
                      strokeWidth="1.5"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                    <path
                      d="M21.3058 20.9999L16.9558 16.6499"
                      stroke="#ED543E"
                      strokeWidth="1.5"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                  <div className={"flex-1 relative h-full"}>
                    <input
                      onClick={(e: any) => {
                        if (!e.target.value) {
                          setDesktopSuggest(true);
                        }
                      }}
                      onBlur={() => {
                        setDesktopSuggest(false);
                      }}
                      onKeyDown={(e: any) => {
                        if (e.key == "Enter") {
                          handleSearch(e.target.value);
                        } else {
                          if (e.target.value) {
                            setDesktopSuggest(false);
                          } else {
                            setDesktopSuggest(true);
                          }
                        }
                      }}
                      type="text"
                      id={"searchDesktop"}
                      placeholder={__t(
                        "navbar.search_placeholder",
                        translations
                      )}
                      className={
                        "w-full h-full text-[14px] font-medium text-[#898989] outline-none"
                      }
                    />

                    <div
                      className={`${
                        desktopSuggest
                          ? "opacity-100 visible"
                          : "opacity-0 invisible "
                      } transition-opacity duration-200 absolute left-[-16px] bg-white py-[24px] px-[16px]`}
                      style={{
                        width: "calc(100% + 16px)",
                        top: "calc(100%)",
                        boxShadow:
                          "0 4px 6px rgba(0, 0, 0, 0.15), 0 -2px 4px rgba(0, 0, 0, 0)",
                        borderBottomRightRadius: "8px",
                        borderBottomLeftRadius: "8px",
                      }}
                    >
                      <div className={"text-[#898989] font-normal text-[14px]"}>
                        Popular topic
                      </div>
                      <div className={"mt-[12px] flex flex-col gap-[4px]"}>
                        {keywords.map((item: any, index: number) => {
                          return (
                            <div
                              key={index}
                              className={
                                "px-[16px] py-[8px] rounded-[8px] cursor-pointer text-pcsText hover:bg-[#FEF3F1] transition-background duration-200"
                              }
                              onClick={() => handleNavigate(item.url)}
                            >
                              {item.label}
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  </div>
                  <div
                    onClick={() => {
                      let el: HTMLInputElement | null =
                        document.querySelector("#searchDesktop");
                      if (el) {
                        handleSearch(el.value);
                      }
                    }}
                    className={
                      "h-[34px] px-[28px] rounded-[18px] bg-pcsMain text-white text-[14px] font-medium cursor-pointer flex items-center"
                    }
                  >
                    {__t("navbar.search_label", translations)}
                  </div>
                </div>
              </div>
              <div
                className={"cursor-pointer"}
                onClick={() => setActiveDesktopSearch(false)}
              >
                <svg
                  width="33"
                  height="34"
                  viewBox="0 0 33 34"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle
                    cx="16.5"
                    cy="16.5"
                    r="16"
                    fill="white"
                    stroke="#979797"
                  />
                  <line
                    x1="22.667"
                    y1="11.3536"
                    x2="11.3533"
                    y2="22.6673"
                    stroke="black"
                  />
                  <line
                    x1="11.3536"
                    y1="11.6464"
                    x2="22.6673"
                    y2="22.9602"
                    stroke="black"
                  />
                </svg>
              </div>
            </>
          ) : (
            <>
              <div className={"flex-1"}>
                <div className="flex items-center text-pcsText justify-center gap-[40px]">
                  <div
                    className={`flex justify-center items-center ${
                      params.lang == "en" ? "w-[90px]" : ""
                    }`}
                  >
                    <Link
                      href={"/track-trace"}
                      title={__t("navbar.track_trace", translations)}
                      className={`text-[14px] font-medium menu-item ${
                        location.pathname.includes("/track-trace")
                          ? "menu-item--active"
                          : ""
                      }`}
                    >
                      {__t("navbar.track_trace", translations)}
                    </Link>
                  </div>
                  <div
                    className={`flex justify-center items-center ${
                      params.lang == "en" ? "w-[130px]" : ""
                    }`}
                  >
                    <div
                      className={`text-[14px] font-medium menu-item relative group ${
                        location.pathname.includes("/business-solutions")
                          ? "menu-item--active"
                          : ""
                      }`}
                    >
                      <div className={"cursor-pointer"}>
                        {__t("navbar.business_solutions", translations)}
                      </div>
                      <div className="absolute right-0  md:right-[-320px] min-[900px]:right-[-400px]  lg:right-[-450px] pt-[32px]  bg-transparent rounded-[8px] opacity-0 invisible group-hover:visible group-hover:opacity-100 transition-all duration-200">
                        <div
                          className={
                            "lg:px-[32px] px-[20px] lg:py-[32px] py-[20px] lg:w-[900px] min-[900px]:w-[800px] w-[680px] bg-white rounded-[8px]"
                          }
                        >
                          <div className={"grid grid-cols-12"}>
                            <div className="col-span-4 flex flex-col gap-[8px]">
                              {solutions.map((solution, index) => {
                                return (
                                  <div
                                    onMouseEnter={() =>
                                      setActiveDesktopMenu(solution.title)
                                    }
                                    key={index}
                                  >
                                    <Link
                                      title={__t(solution.title, translations)}
                                      href={solution.url}
                                      className={`menu-solution flex p-[12px] rounded-[8px] bg-white ${
                                        activeDesktopMenu == solution.title
                                          ? "menu-solution--active"
                                          : ""
                                      } hover:bg-[#FEF3F1] items-center`}
                                    >
                                      <div
                                        className={
                                          "label flex-1 text-pcsText text-[14px] font-medium"
                                        }
                                      >
                                        {__t(solution.title, translations)}
                                      </div>
                                      <div className={"icon"}>
                                        <svg
                                          width="24"
                                          height="24"
                                          viewBox="0 0 24 24"
                                          fill="none"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M5 12H19"
                                            stroke="white"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                          />
                                          <path
                                            d="M14 7L19 12L14 17"
                                            stroke="white"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                          />
                                        </svg>
                                      </div>
                                    </Link>
                                    {/* <div
                                      className={`menu-solution flex p-[12px] rounded-[8px] bg-white ${
                                        activeDesktopMenu == solution.title
                                          ? "menu-solution--active"
                                          : ""
                                      } hover:bg-[#FEF3F1] items-center`}
                                    >
                                      <div
                                        className={
                                          "label flex-1 text-pcsText text-[14px] font-medium"
                                        }
                                      >
                                        {__t(solution.title, translations)}
                                      </div>
                                      <div className={"icon"}>
                                        <svg
                                          width="24"
                                          height="24"
                                          viewBox="0 0 24 24"
                                          fill="none"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M5 12H19"
                                            stroke="white"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                          />
                                          <path
                                            d="M14 7L19 12L14 17"
                                            stroke="white"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                          />
                                        </svg>
                                      </div>
                                    </div> */}
                                  </div>
                                );
                              })}
                            </div>
                            <div className="col-span-1 flex items-center justify-center h-full">
                              <div className={"w-[1px] h-full bg-[#DFDFDF]"} />
                            </div>
                            <div className="col-span-7 flex gap-[20px]">
                              <div className="flex-1 p-[12px]">
                                <ul
                                  className={
                                    "list-disc marker:pcsMain flex flex-col gap-[20px]"
                                  }
                                >
                                  {solutions
                                    .find(
                                      (solution) =>
                                        solution.title == activeDesktopMenu
                                    )
                                    ?.services.map((service, index) => {
                                      return (
                                        <li key={index}>
                                          <Link
                                            title={__t(
                                              service.title,
                                              translations
                                            )}
                                            className={
                                              "text-[14px] font-medium text-pcsText menu-service"
                                            }
                                            href={service.url}
                                          >
                                            {__t(service.title, translations)}
                                          </Link>
                                        </li>
                                      );
                                    })}
                                </ul>
                              </div>
                              <div
                                className={
                                  "flex flex-col gap-[16px] max-w-[165px]"
                                }
                              >
                                <img
                                  className="rounded-[8px]"
                                  src={
                                    solutions.find(
                                      (solution) =>
                                        solution.title == activeDesktopMenu
                                    )?.image
                                  }
                                  alt="Service"
                                />
                                <div
                                  className={
                                    "text-[12px] font-medium text-[#717171]"
                                  }
                                >
                                  {__t(
                                    solutions.find(
                                      (solution) =>
                                        solution.title == activeDesktopMenu
                                    )?.summary || "",
                                    translations
                                  )}
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={`flex justify-center items-center ${
                      params.lang == "en" ? "w-[36px]" : ""
                    }`}
                  >
                    <Link
                      title={__t("navbar.news", translations)}
                      href={"/news"}
                      className={`text-[14px] font-medium menu-item ${
                        location.pathname.includes("/news")
                          ? "menu-item--active"
                          : ""
                      }`}
                    >
                      {__t("navbar.news", translations)}
                    </Link>
                  </div>
                  <div
                    className={`flex justify-center items-center ${
                      params.lang == "en" ? "w-[74px]" : ""
                    }`}
                  >
                    <Link
                      title={__t("navbar.about_pcs", translations)}
                      href={"/about"}
                      className={`text-[14px] font-medium menu-item ${
                        location.pathname.includes("/about")
                          ? "menu-item--active"
                          : ""
                      }`}
                    >
                      {__t("navbar.about_pcs", translations)}
                    </Link>
                  </div>
                </div>
              </div>
              <div className={"flex gap-[12px] items-center"}>
                <div
                  className={"search cursor-pointer select-none"}
                  onClick={() => setActiveDesktopSearch(true)}
                >
                  {/* <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path
                        d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z"
                        stroke="#ED543E" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M20.9999 20.9999L16.6499 16.6499" stroke="#ED543E" strokeWidth="1.5"
                            strokeLinecap="round"
                            strokeLinejoin="round"/>
                    </svg> */}
                  <div className="flex px-[24px] py-[14px] justify-center items-center bg-[#FCE7E4] rounded-[40px]">
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 18 18"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M8.11115 15.2223C12.0385 15.2223 15.2223 12.0385 15.2223 8.11115C15.2223 4.18377 12.0385 1 8.11115 1C4.18377 1 1 4.18377 1 8.11115C1 12.0385 4.18377 15.2223 8.11115 15.2223Z"
                        stroke="#ED543E"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                      <path
                        d="M17 17.0001L13.1333 13.1334"
                        stroke="#ED543E"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  </div>

                  {/* <div className="button_search_home">
                    <div className="text-[#808080] font-[500] text-[15px]">
                    {__t("navbar.search", translations)}
                    </div>
                    <div>
                      <svg
                        width="18"
                        height="18"
                        viewBox="0 0 18 18"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M8.11115 15.2223C12.0385 15.2223 15.2223 12.0385 15.2223 8.11115C15.2223 4.18377 12.0385 1 8.11115 1C4.18377 1 1 4.18377 1 8.11115C1 12.0385 4.18377 15.2223 8.11115 15.2223Z"
                          stroke="#ED543E"
                          stroke-width="1.5"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                        />
                        <path
                          d="M17 17.0001L13.1333 13.1334"
                          stroke="#ED543E"
                          stroke-width="1.5"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                        />
                      </svg>
                    </div>
                  </div> */}
                </div>
                {/* <div
                    className={"login h-[32px] px-[16px] flex items-center cursor-pointer bg-pcsMain text-white rounded-[18px] text-[14px] font-medium"}>
                    {__t("navbar.login", translations)}
                  </div> */}
              </div>
            </>
          )}
        </div>
        {/* <div
          className={`flex ${
            isSticky ? "navbar__sticky shadow-md" : ""
          } w-full md:hidden items-center rounded-[40px] px-[12px] py-[8px] gap-[12px] relative`}
        > */}
        <div
  className={`flex w-full items-center rounded-[40px] px-[12px] py-[8px] gap-[12px] relative 
    ${isSticky ? "navbar__sticky" : ""} 
    ${isSticky && window.innerWidth >= 768 ? "shadow-lg" : ""} 
    md:hidden`}
>
          <div className="">
            <a href={`/${params.lang}`} title="PCS">
              <svg
                width="87"
                height="56"
                viewBox="0 0 87 56"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_443_127)">
                  <path
                    d="M38.2107 23.8326C38.4735 23.5691 38.6217 23.2109 38.6217 22.8378V22.3548C38.6217 21.9817 38.4735 21.6235 38.2107 21.36C37.9479 21.0964 37.5902 20.9479 37.2182 20.9479H28.756V24.2458H37.2182C37.5902 24.2458 37.9474 24.0972 38.2107 23.8337V23.8326ZM23.8231 37.4369V16.0005H39.4205C39.9768 16.0005 40.5254 16.1303 41.0231 16.3796L41.3907 16.5639C41.7352 16.7367 42.0496 16.9639 42.3217 17.2368C42.5944 17.5097 42.821 17.825 42.9927 18.1705L43.1765 18.5391C43.4256 19.0376 43.5545 19.5883 43.5545 20.1457V25.0458C43.5545 25.6031 43.4256 26.1533 43.1765 26.6524L42.9927 27.0216C42.8204 27.3671 42.5938 27.6829 42.3217 27.9553C42.0496 28.2282 41.7352 28.4559 41.3907 28.6281L41.0225 28.8125C40.5254 29.0623 39.9763 29.1916 39.4205 29.1916H28.756V37.4358H23.8231V37.4369Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M47.7313 37.0577L47.3637 36.8734C47.0192 36.7006 46.7043 36.4729 46.4321 36.2C46.1606 35.9271 45.934 35.6118 45.7617 35.2668L45.5779 34.8982C45.3288 34.3991 45.1993 33.8489 45.1993 33.291V20.1467C45.1993 19.5888 45.3288 19.0386 45.5779 18.5396L45.7617 18.171C45.9334 17.826 46.1606 17.5102 46.4321 17.2378C46.7043 16.9649 47.0192 16.7371 47.3637 16.5644L47.7313 16.3801C48.2284 16.1303 48.7776 16.001 49.3334 16.001H60.7962C61.3525 16.001 61.9011 16.1308 62.3987 16.3801L62.7663 16.5644C63.1109 16.7371 63.4253 16.9644 63.6974 17.2373C63.9701 17.5102 64.1966 17.8254 64.3684 18.171L64.5522 18.5396C64.8012 19.0381 64.9302 19.5888 64.9302 20.1462V22.5962H59.9973V21.7715L59.1755 20.9467H50.9535L50.1311 21.7715V31.6657L50.9535 32.4905H59.1755L59.9973 31.6657V30.841H64.9302V33.291C64.9302 33.8484 64.8007 34.3991 64.5522 34.8976L64.3684 35.2663C64.1966 35.6118 63.9695 35.9271 63.6974 36.2C63.4253 36.4729 63.1109 36.7006 62.7663 36.8728L62.3987 37.0572C61.9011 37.307 61.3525 37.4363 60.7962 37.4363H49.3334C48.7776 37.4363 48.2284 37.3064 47.7313 37.0572V37.0577Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M69.1075 37.0577L68.7394 36.8728C68.3949 36.7001 68.0805 36.4729 67.8084 36.2C67.5368 35.9271 67.3102 35.6118 67.1379 35.2668L66.9536 34.8976C66.7045 34.3991 66.5756 33.8489 66.5756 33.291V30.841H71.5084V31.6657L72.3308 32.4905H80.5528L81.3747 31.6657V30.0168L80.5528 29.1926H70.7101C70.1544 29.1926 69.6052 29.0627 69.1081 28.8135L68.74 28.6292C68.3954 28.4564 68.0805 28.2286 67.8089 27.9557C67.5362 27.6828 67.3107 27.3676 67.1379 27.0226L66.9536 26.6534C66.7045 26.1549 66.5756 25.6042 66.5756 25.0468V20.1467C66.5756 19.5894 66.705 19.0386 66.9536 18.5402L67.1379 18.171C67.3096 17.826 67.5368 17.5113 67.8084 17.2384C68.0805 16.9655 68.3949 16.7377 68.7394 16.5649L69.1075 16.3801C69.6046 16.1303 70.1533 16.001 70.709 16.001H82.1724C82.7282 16.001 83.2768 16.1308 83.7744 16.3801L84.1426 16.5649C84.4866 16.7377 84.8015 16.9649 85.0731 17.2378C85.3452 17.5107 85.5718 17.8265 85.744 18.1715L85.9278 18.5407C86.1769 19.0392 86.3059 19.5894 86.3059 20.1467V22.5968H81.373V21.772L80.5511 20.9473H72.3292L71.5068 21.772V23.421L72.3292 24.2457H82.1718C82.7276 24.2457 83.2763 24.375 83.7728 24.6248L84.1409 24.8091C84.4855 24.9819 84.7998 25.2091 85.072 25.482C85.3446 25.7549 85.5712 26.0702 85.7429 26.4157L85.9273 26.7849C86.1758 27.2834 86.3053 27.8336 86.3053 28.391V33.2916C86.3053 33.8489 86.1753 34.3991 85.9273 34.8976L85.7435 35.2668C85.5712 35.6118 85.3446 35.9276 85.0725 36.2C84.8004 36.4729 84.486 36.7006 84.142 36.8728L83.7739 37.0577C83.2768 37.3075 82.7282 37.4368 82.1718 37.4368H70.7085C70.1527 37.4368 69.6041 37.307 69.107 37.0577H69.1075Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M20.1836 0.735607C27.3439 -0.988722 34.5229 0.401635 40.3067 4.03516C35.8358 2.25581 30.7933 1.79254 25.7611 3.00464C12.7758 6.13253 4.77716 19.2246 7.89565 32.2467C11.0141 45.2694 24.0691 53.2908 37.0549 50.1635C37.6304 50.0254 38.195 49.8664 38.7497 49.6892C36.8124 50.7263 34.7138 51.5368 32.4787 52.0754C18.3413 55.4795 4.12922 46.7473 0.734214 32.5702C-2.66079 18.3932 6.04672 4.1408 20.1836 0.735607Z"
                    fill="#008ACC"
                  />
                  <path
                    d="M22.2008 6.67386C20.2729 7.52282 18.9605 8.17261 15.3016 10.8801C18.3444 7.00123 21.487 5.58611 24.6533 4.456C29.2492 2.81585 42.6817 1.76552 49.0223 12.3673C49.2544 12.7547 49.3822 13.1921 49.5369 13.6097C44.3331 4.1809 29.7946 3.33084 22.1997 6.67386H22.2003H22.2008Z"
                    fill="#ED543E"
                  />
                  <path
                    d="M44.7215 47.6435C47.8132 45.1203 50.2091 42.059 51.8885 38.7039C50.4225 43.046 47.7528 47.0311 43.9535 50.1486C32.2992 59.7094 16.3776 57.2462 5.57809 45.0092C5.14576 44.5195 4.84346 44.0689 4.50439 43.5858C17.1385 56.6327 33.504 56.8016 44.7215 47.6446V47.6435Z"
                    fill="#ED543E"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_443_127">
                    <rect width="86.3059" height="56" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
          <div className={"flex-1 md:hidden"} />
          {!activeMobileSearch && !activeMobileMenu ? (
            <>
              <div
                className={"mobile-search cursor-pointer "}
                onClick={() => {
                  setActiveMobileSearch(true);
                  setBodyScroll(false);
                }}
              >
                {/* <div className="button_search_home">
                  <div className="text-[#808080] font-[500] text-[15px]">
                    {__t("navbar.search", translations)}
                  </div>
                  <div>
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 18 18"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M8.11115 15.2223C12.0385 15.2223 15.2223 12.0385 15.2223 8.11115C15.2223 4.18377 12.0385 1 8.11115 1C4.18377 1 1 4.18377 1 8.11115C1 12.0385 4.18377 15.2223 8.11115 15.2223Z"
                        stroke="#ED543E"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                      <path
                        d="M17 17.0001L13.1333 13.1334"
                        stroke="#ED543E"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  </div>
                </div> */}
                 {/* <div className="flex px-[24px] py-[14px] justify-center items-center bg-[#FCE7E4] rounded-[40px]"> */}
                    <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.11115 15.2223C12.0385 15.2223 15.2223 12.0385 15.2223 8.11115C15.2223 4.18377 12.0385 1 8.11115 1C4.18377 1 1 4.18377 1 8.11115C1 12.0385 4.18377 15.2223 8.11115 15.2223Z" stroke="#ED543E" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M17 17.0001L13.1333 13.1334" stroke="#ED543E" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

                    </div>
              {/* </div> */}
              {/* <div className="mobile-login cursor-pointer w-[36px] h-[36px] flex items-center justify-center rounded-full bg-pcsMain">
                <svg
                  width="21"
                  height="21"
                  viewBox="0 0 21 21"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17.1666 18V16.3333C17.1666 15.4493 16.8155 14.6014 16.1903 13.9763C15.5652 13.3512 14.7174 13 13.8333 13H7.16665C6.28259 13 5.43474 13.3512 4.80962 13.9763C4.1845 14.6014 3.83331 15.4493 3.83331 16.3333V18"
                    stroke="white"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M10.5 9.66667C12.341 9.66667 13.8334 8.17428 13.8334 6.33333C13.8334 4.49238 12.341 3 10.5 3C8.65907 3 7.16669 4.49238 7.16669 6.33333C7.16669 8.17428 8.65907 9.66667 10.5 9.66667Z"
                    stroke="white"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div> */}
              <div
                className={"mobile-menu cursor-pointer"}
                onClick={() => {
                  setActiveMobileMenu(true);
                  setBodyScroll(false);
                }}
              >
                <svg
                  width="36"
                  height="36"
                  viewBox="0 0 36 36"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5 18H31"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M5 8H31"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M5 28H31"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div>
            </>
          ) : (
            <div
              className={
                "w-[36px] h-[36px] flex items-center justify-center cursor-pointer"
              }
              onClick={() => {
                setActiveMobileSearch(false);
                setActiveMobileMenu(false);
                setActiveMobileBusinessSolution(false);
                setActiveMobileService("");
                setBodyScroll(true);
              }}
            >
              <svg
                width="21"
                height="21"
                viewBox="0 0 21 21"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M1 20.0919L20.0919 1M1.00004 1.09175L20.0919 20.1836"
                  stroke="black"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </div>
          )}
        </div>

        <div
          className={`absolute h-[100vh] left-0 w-full pt-[16px] px-[28px] bg-white ${
            activeMobileSearch || activeMobileMenu
              ? "visible opacity-100 "
              : "opacity-0 invisible"
          } transition-all duration-200`}
        >
          {activeMobileSearch ? (
            <div
              className={
                "bg-white h-[52px] rounded-[52px] border-[1px] border-[#B7B7B7] flex items-center gap-[8px] px-[8px]"
              }
            >
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M21 21L16.65 16.65M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z"
                  stroke="#ED543E"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
              <div className={" flex-1 relative"}>
                <input
                  onClick={(e: any) => {
                    if (!e.target.value) {
                      setMobileSuggest(true);
                    }
                  }}
                  onBlur={() => {
                    setMobileSuggest(false);
                  }}
                  onKeyDown={(e: any) => {
                    if (e.key == "Enter") {
                      handleSearch(e.target.value);
                    } else {
                      if (e.target.value) {
                        setMobileSuggest(false);
                      } else {
                        setMobileSuggest(true);
                      }
                    }
                  }}
                  id={"searchMobile"}
                  type="text"
                  placeholder={__t("navbar.search_placeholder", translations)}
                  className={
                    "w-full text-[14px] font-medium text-[#898989] outline-none border-none shadow-none"
                  }
                />

                <div
                  className={`${
                    mobileSuggest
                      ? "opacity-100 visible"
                      : "opacity-0 invisible "
                  } transition-opacity duration-200 absolute left-[-16px] bg-white py-[24px] px-[16px]`}
                  style={{
                    width: "calc(100% + 16px)",
                    top: "calc(100% + 13px)",
                    boxShadow:
                      "0 4px 6px rgba(0, 0, 0, 0.12), 0 -2px 4px rgba(0, 0, 0, 0)",
                    borderBottomRightRadius: "8px",
                    borderBottomLeftRadius: "8px",
                  }}
                >
                  <div className={"text-[#898989] font-normal text-[14px]"}>
                    Popular topic
                  </div>
                  <div className={"mt-[12px] flex flex-col gap-[4px]"}>
                    {keywords.map((item: any, index: number) => {
                      return (
                        <div
                          key={index}
                          className={
                            "px-[16px] py-[8px] rounded-[8px] cursor-pointer text-pcsText hover:bg-[#FEF3F1] transition-background duration-200"
                          }
                          onClick={() => handleNavigate(item.url)}
                        >
                          {item.label}
                        </div>
                      );
                    })}
                  </div>
                </div>
              </div>
              <div
                onClick={() => {
                  let el: HTMLInputElement | null =
                    document.querySelector("#searchMobile");
                  if (el) {
                    handleSearch(el.value);
                  }
                }}
                className={
                  "h-[36px] px-[12px] rounded-[24px] bg-pcsMain text-white text-[14px] font-medium cursor-pointer flex items-center"
                }
              >
                {__t("navbar.search_label", translations)}
              </div>
            </div>
          ) : null}
          {activeMobileMenu ? (
            <div
              className={`overflow-scroll mobile-menu-content ${
                isSticky ? "mobile-menu-content--whenSticky" : ""
              }`}
            >
              <Link
                href={"/track-trace"}
                title={__t("navbar.track_trace", translations)}
                className={
                  "flex items-center gap-[16px] pl-[16px] pr-[12px] text-[16px] font-medium h-[48px] hover:bg-[#FEF3F1] rounded-[8px]"
                }
              >
                <div className={"flex-1"}>
                  {__t("navbar.track_trace", translations)}
                </div>
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M9.49988 6.5L14.4999 11.5L9.49988 16.5"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </Link>
              <div className={"flex flex-col gap-[8px] mt-[8px]"}>
                <div
                  className={`cursor-pointer  rounded-[8px] flex items-center gap-[16px] pl-[16px] pr-[12px] text-[16px] font-medium h-[48px]  ${
                    activeMobileBusinessSolution
                      ? "bg-[#FEF3F1] text-pcsMain font-bold"
                      : "bg-white"
                  }`}
                  onClick={() => {
                    setActiveMobileBusinessSolution(
                      !activeMobileBusinessSolution
                    );
                    setActiveMobileService("");
                  }}
                >
                  <div className={"flex-1"}>
                    {__t("navbar.business_solutions", translations)}
                  </div>
                  {activeMobileBusinessSolution ? (
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M7 14L12 9L17 14"
                        stroke="#ED543E"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  ) : (
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M9.49988 6.5L14.4999 11.5L9.49988 16.5"
                        stroke="black"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </div>
                {activeMobileBusinessSolution ? (
                  <div className={"mobile-services pl-[16px]"}>
                    {solutions.map((solution, index: number) => {
                      return (
                        <React.Fragment key={index}>
                          <div
                            className={`cursor-pointer flex items-center gap-[16px] pl-[16px] pr-[12px] text-[14px] font-medium h-[48px] rounded-[8px] ${
                              activeMobileService == solution.title
                                ? "bg-[#FEF3F1] text-pcsMain font-bold"
                                : "bg-white"
                            }`}
                            onClick={() =>
                              // setActiveMobileService(
                              //   activeMobileService == solution.title
                              //     ? solution.url
                              //     : solution.title
                              // )
                              //  {
                              //   if (activeMobileService === solution.title) {
                              //     if (solution.url) {
                              //       window.location.href = solution.url;
                              //     }
                              //   } else {
                              //     setActiveMobileService(solution.title);
                              //   }
                              //  }
                              {
                                if (activeMobileService === solution.title) {
                                  if (solution.url) {
                                    const url = `/${params.lang}${solution.url}`;
                                    window.location.href = url;
                                  }
                                } else {
                                  setActiveMobileService(solution.title);
                                }
                              }
                            }
                          >
                            <div className={"flex-1"}>
                              {/* {solution.title} */}
                              {__t(solution.title, translations)}
                            </div>
                            {activeMobileService == solution.title ? (
                              <svg
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M7 14L12 9L17 14"
                                  stroke="#ED543E"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                />
                              </svg>
                            ) : (
                              <svg
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M9.49988 6.5L14.4999 11.5L9.49988 16.5"
                                  stroke="black"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                />
                              </svg>
                            )}
                          </div>
                          {activeMobileService == solution.title ? (
                            <ul
                              className={
                                "flex flex-col list-disc marker:text-pcsMain bg-[#FEF3F1] pl-[48px] pt-[16px] pb-[32px] mt-[4px] rounded-[8px]"
                              }
                            >
                              {solutions
                                .find(
                                  (solution) =>
                                    solution.title == activeMobileService
                                )
                                ?.services.map((service, idx) => {
                                  return (
                                    <li
                                      key={`${index}-${idx}`}
                                      className={"pb-[12px]"}
                                    >
                                      <Link
                                        title={__t(service.title, translations)}
                                        href={service.url}
                                        className={
                                          "text-[14px] font-medium text-pcsText menu-service hover:underline hover:text-pcsMain"
                                        }
                                      >
                                        {__t(service.title, translations)}
                                      </Link>
                                    </li>
                                  );
                                })}
                            </ul>
                          ) : null}
                        </React.Fragment>
                      );
                    })}
                  </div>
                ) : null}
              </div>
              <Link
                href={"/news"}
                title={__t("navbar.news", translations)}
                className={
                  "mt-[8px] flex items-center gap-[16px] pl-[16px] pr-[12px] text-[16px] font-medium h-[48px] hover:bg-[#FEF3F1] rounded-[8px]"
                }
              >
                <div className={"flex-1"}>
                  {__t("navbar.news", translations)}
                </div>
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M9.49988 6.5L14.4999 11.5L9.49988 16.5"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </Link>
              <Link
                href={"/about"}
                title={__t("navbar.about_pcs", translations)}
                className={
                  "mt-[8px] flex items-center gap-[16px] pl-[16px] pr-[12px] text-[16px] font-medium h-[48px] hover:bg-[#FEF3F1] rounded-[8px]"
                }
              >
                <div className={"flex-1"}>
                  {__t("navbar.about_pcs", translations)}
                </div>
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M9.49988 6.5L14.4999 11.5L9.49988 16.5"
                    stroke="black"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </Link>
            </div>
          ) : null}
        </div>
      </div>
    </>
  );
};

export default Navbar;
