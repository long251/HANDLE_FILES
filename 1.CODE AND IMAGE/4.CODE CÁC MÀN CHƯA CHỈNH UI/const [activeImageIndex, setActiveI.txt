const [activeImageIndex, setActiveImageIndex] = useState(0);
  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent) => {
      if (event.key === 'ArrowUp') {
        handlePrev();
      } else if (event.key === 'ArrowDown') {
        handleNext();
      }
    };
    window.addEventListener('keydown', handleKeyDown);
    return () => {
      window.removeEventListener('keydown', handleKeyDown);
    };
  }, [activeImageIndex]);
const handlePrev = () => {
    if (images.length > 1) {
      let newIndex = activeImageIndex - 1;
      if (newIndex < 0) newIndex = images.length - 1;
      setActiveImageIndex(newIndex);
      setOptionByActiveImage(newIndex);
      scrollToImage(newIndex);
    }
  };
const handleNext = () => {
    if (images.length > 1) {
      let newIndex = activeImageIndex + 1;
      if (newIndex >= images.length) newIndex = 0;
      setActiveImageIndex(newIndex);
      setOptionByActiveImage(newIndex);
      scrollToImage(newIndex);
    }
  };
const scrollToImage = (idx: number) => {
    const gallery: HTMLDivElement | null = document.querySelector('.GalleryImageContainer');
    const selectedImage = document.querySelectorAll('.GalleryImage')[idx];
    if (gallery && selectedImage) {
      const selectedImageRect = selectedImage.getBoundingClientRect();
      const galleryRect = gallery.getBoundingClientRect();
      const offset = selectedImageRect.top - galleryRect.top;
      gallery.scrollTop += offset;
    }
  };

  const handleSelectImage = (idx: number) => {
    setActiveImageIndex(idx);
    setOptionByActiveImage(idx);
  };
  const setOptionByActiveImage = (index: number) => {
    let menuItemPictureIndexMap = productData.menuItemPictureIndexMap;
    if (menuItemPictureIndexMap) {
      let menuItemPictureIndexMapArr = Object.keys(menuItemPictureIndexMap).map((key: string) => {
        return { key: key, value: menuItemPictureIndexMap[key] };
      });
      let optionValues = [];
      for (let i = 0; i < menuItemPictureIndexMapArr.length; i++) {
        let indexValues = menuItemPictureIndexMapArr[i]['value'];
        for (let j = 0; j < indexValues.length; j++) {
          if (index == indexValues[j]) {
            optionValues.push(menuItemPictureIndexMapArr[i]['key']);
          }
        }
      }
      let optionEls: NodeListOf<HTMLOptionElement> = document.querySelectorAll('.select_product_detail option');
      for (let i = 0; i < optionEls.length; i++) {
        optionEls[i].selected = false;
        if (optionEls[i].value == optionValues[0]) {
          optionEls[i].selected = true;
        }
      }
      handleChangeOption(false);
    }
  };
====================================================
                          <div
                            className={` ${
                              images.length === 1 ? 'ProductDetail__Info__MediaOneImage' : 'ProductDetail__Info__Media'
                            }`}
                          >
                            <div className='ProductDetail__Info__Media--Gallery'>
                              {images.length > 1 ? (
                                <div className='GalleryImage'>
                                  {images.map((img: string, index: number) => (
                                    <div className={'GalleryImageItem'} key={index}>
                                      <img
                                        className={`${index == activeImageIndex ? 'Active' : ''}`}
                                        onClick={() => handleSelectImage(index)}
                                        alt={''}
                                        src={img}
                                      />
                                    </div>
                                  ))}
                                </div>
                              ) : null}
                            </div>
                            <div className='Style_BackGround_Detail_Product'>
                              <div className='Style_BackGround_Detail_Product_Tran'>
                                {images.length > 1 && (
                                  <div className='Style_Icon_Prv' onClick={handlePrev}>
                                    <IconPrv />
                                  </div>
                                )}

                                <div
                                  className='ProductDetail__Info__Media--Thumbnail'
                                  style={{
                                    width: '100%',
                                  }}
                                >
                                  <img
                                    className='ProductDetail__Info__Media--Thumbnail_Image'
                                    src={images[activeImageIndex]}
                                    alt={name}
                                  />
                                </div>

                                {images.length > 1 && (
                                  <div className='Style_Icon_Next' onClick={handleNext}>
                                    <IconNxt />
                                  </div>
                                )}
                              </div>
                            </div>
                          </div>